#!/usr/bin/env bash
#
# This script creates and updates a .gitignore file.
#
# NOTE: you may need to add --proxy, --cacert and --cert-type
# (or other) options to ~/.curlrc.
#

# Use git-sh-setup: https://www.kernel.org/pub/software/scm/git/docs/git-sh-setup.html
OPTIONS_STUCKLONG=t
OPTIONS_KEEPDASHDASH=
OPTIONS_SPEC="\
git ignore [options] <template-pattern-or-search-term>...

Creates or updated a .gitignore file.
--
l,list list available templates
s,search search in available templates
u,update-list update list of templates (used with -l or -s, automatic every 3 days)
p,pattern add pattern(s) to .gitignore file
r,replace replace .gitignore file (ignored for -l or -s)
c,current-dir use .gitignore in current directory instead of root (ignored for -l or -s)
"

SUBDIRECTORY_OK="yes" . "$(git --exec-path)/git-sh-setup"

die_with_usage() {
    printf >&2 '%s\n\n' "$*"
    usage
    exit 1
}

file_age() {
    echo $(($(date +%s) - $(date -r $1 +%s)))
}

is_stale() {
    (! [ -f $1 ]) || [ $(file_age $1) -gt 4320 ]
}

join() {
    local oldifs=$IFS
    IFS=$1
    shift
    echo "$*"
    IFS=$oldifs
}

replace=false
list=false
search=false
update=false
pattern=false
ignorefile="$(git rev-parse --show-toplevel)/.gitignore"
while test $# != 0; do
    case "$1" in
    --replace) replace=true ;;
    --list)
        if $search; then die_with_usage "--list and --search cannot be used together"; fi
        if $pattern; then die_with_usage "--list and --pattern cannot be used together"; fi
        list=true
        ;;
    --search)
        if $list; then die_with_usage "--list and --search cannot be used together"; fi
        if $pattern; then die_with_usage "--search and --pattern cannot be used together"; fi
        search=true
        ;;
    --update-list) update=true ;;
    --pattern)
        if $list; then die_with_usage "--list and --pattern cannot be used together"; fi
        if $search; then die_with_usage "--search and --pattern cannot be used together"; fi
        pattern=true
        ;;
    --current-dir) ignorefile="./.gitignore" ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

ignoreio='https://www.toptal.com/developers/gitignore/api'
gipath="$HOME/.gilist"

if ($list || $search); then
    if ! $update; then
        if is_stale $gipath; then
            update=true
        fi
    fi

    if $update; then
        curl -sL "$ignoreio/list" >"$gipath"
    fi

    gilist=$(tr "," "\n" <"$gipath" 2>/dev/null)
    if $list; then
        echo "$gilist" | column
    else
        if [ "$#" -eq 0 ]; then
            die_with_usage "No search terms provided"
        fi
        found=""
        for type in $gilist; do
            for term in $@; do
                if [[ "$type" == *$term* ]]; then
                    if [ -n $found ]; then
                        found+="\n$type"
                    else
                        found=$type
                    fi
                    break
                fi
            done
        done
        echo -e "$found" | column
    fi
elif $pattern; then
    if [ "$#" -eq 0 ]; then
        die_with_usage "No patterns provided."
    fi
    first=$replace
    for p in $@; do
        if $first; then
            echo "$p" >"$ignorefile"
        else
            echo "$p" >>"$ignorefile"
        fi
        first=false
    done
else
    if [ "$#" -eq 0 ]; then
        die_with_usage "No templates provided."
    fi
    template=$(curl -sL "$ignoreio/$(join ',' $@)")
    if $replace; then
        echo "$template" >"$ignorefile"
    else
        echo "$template" >>"$ignorefile"
    fi
fi
